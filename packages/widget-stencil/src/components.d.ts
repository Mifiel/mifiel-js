/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MifielWidget {
        /**
          * Main button action in the full screen error view. Can be a URL or a function.
         */
        "callToActionError"?: string | Function;
        /**
          * Main button action in the success view. Can be a URL or a function.
         */
        "callToActionSuccess"?: string | Function;
        /**
          * Set classes to the iframe container
         */
        "containerClass"?: string;
        /**
          * The environment to use for the widget.
          * @default 'production'
         */
        "environment": keyof typeof environments;
        "getIframe": () => Promise<HTMLIFrameElement>;
        /**
          * The ID of the widget.
         */
        "id": string;
        /**
          * Listener for errors that occur during the signing flow.
         */
        "onError"?: Function;
        /**
          * Function to be called when the document is signed successfully.
         */
        "onSuccess"?: Function;
        /**
          * The text of the success button.
          * @default 'Proceed to next step'
         */
        "successBtnText": string;
    }
}
declare global {
    interface HTMLMifielWidgetElement extends Components.MifielWidget, HTMLStencilElement {
    }
    var HTMLMifielWidgetElement: {
        prototype: HTMLMifielWidgetElement;
        new (): HTMLMifielWidgetElement;
    };
    interface HTMLElementTagNameMap {
        "mifiel-widget": HTMLMifielWidgetElement;
    }
}
declare namespace LocalJSX {
    interface MifielWidget {
        /**
          * Main button action in the full screen error view. Can be a URL or a function.
         */
        "callToActionError"?: string | Function;
        /**
          * Main button action in the success view. Can be a URL or a function.
         */
        "callToActionSuccess"?: string | Function;
        /**
          * Set classes to the iframe container
         */
        "containerClass"?: string;
        /**
          * The environment to use for the widget.
          * @default 'production'
         */
        "environment"?: keyof typeof environments;
        /**
          * The ID of the widget.
         */
        "id"?: string;
        /**
          * Listener for errors that occur during the signing flow.
         */
        "onError"?: Function;
        /**
          * Function to be called when the document is signed successfully.
         */
        "onSuccess"?: Function;
        /**
          * The text of the success button.
          * @default 'Proceed to next step'
         */
        "successBtnText"?: string;
    }
    interface IntrinsicElements {
        "mifiel-widget": MifielWidget;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "mifiel-widget": LocalJSX.MifielWidget & JSXBase.HTMLAttributes<HTMLMifielWidgetElement>;
        }
    }
}
